/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int counter(ListNode* head)
    {
        int count=0;
        ListNode* ptr=head;
        while(ptr->next!=NULL)
        {    ptr=ptr->next;
            count++;
           
        }
        ptr->next=head;
        return count;

    }
    ListNode* rotateRight(ListNode* head, int k) {
     
     if(head==NULL)
     return head;
     int n=counter(head);
      k=k%(n+1);
      int p=n-k;
      ListNode *ptr=head;
      ListNode *temp=head;
      while(p--)
      {
          ptr=ptr->next;
      }
      temp=ptr->next;
      ptr->next=NULL;
      return temp;

    }
};
